{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","components/Filter/Filter.js","views/ContactsView.js","components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["dispatch","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","message","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","ContactForm","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","elements","setTimeout","onSubmit","reset","CSSTransition","in","this","appear","classNames","timeout","unmountOnExit","Alert","variant","className","s","form","label","htmlFor","nameInputId","input","type","onChange","id","numberInputId","Button","size","block","isLoadingContacts","Component","defaultProps","connect","contactsSelectors","contactsOperations","onDeleteContact","TransitionGroup","component","ContactList","map","ContactList_item","onClick","onChangeFilter","changeFilter","target","styles","bar","width","marginLeft","marginRight","padding","borderColor","boxShadow","title","fontSize","fontWeight","margin","color","ContactsView","fetchContacts","Container","style","module","exports"],"mappings":"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","file":"static/js/3.fbb587a7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../css/animation.css\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { contacts } = this.props;\r\n    if (\r\n      contacts.find(\r\n        (item) =>\r\n          item.name.toLowerCase() ===\r\n          e.currentTarget.elements[0].value.toLowerCase()\r\n      )\r\n    ) {\r\n      this.setState(() => {\r\n        return {\r\n          error: true,\r\n        };\r\n      });\r\n\r\n      setTimeout(() => {\r\n        this.setState(() => {\r\n          return {\r\n            error: false,\r\n          };\r\n        });\r\n      }, 1500);\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={this.state.error}\r\n          appear={true}\r\n          classNames=\"error\"\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Alert variant=\"warning\">This contact exists already!</Alert>\r\n        </CSSTransition>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className={s.form}>\r\n            <label className={s.label} htmlFor={this.nameInputId}>\r\n              Name\r\n              <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                id={this.nameInputId}\r\n              />\r\n            </label>\r\n            <label className={s.label} htmlFor={this.numberInputId}>\r\n              Number\r\n              <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"number\"\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                id={this.numberInputId}\r\n              />\r\n            </label>\r\n            <Button variant=\"secondary\" size=\"lg\" block type=\"submit\">\r\n              Add contact\r\n            </Button>\r\n            {this.props.isLoadingContacts && <h1>Loading...</h1>}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n  type: \"text\",\r\n  name: null,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(contactsOperations.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport s from \"./Contacts.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={s.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames={s}>\r\n        <li className={s.ContactList_item}>\r\n          {name}: {number}\r\n          {/* <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button> */}\r\n          <Button\r\n            variant=\"danger\"\r\n            size=\"sm\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsSelectors, changeFilter } from \"../../redux/contacts\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={s.form}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToPtops = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToPtops, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Contacts from \"../components/Contacts/Contacts\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport Container from \"../components/Container\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsOperations } from \"../redux/contacts\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"../components/css/animation.css\";\r\n\r\nconst styles = {\r\n  bar: {\r\n    width: 400,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    padding: \"20 30\",\r\n    borderColor: \"rgb(219, 216, 216)\",\r\n    boxShadow: \"0 4 4 rgba(0, 0, 0, 0.25)\",\r\n  },\r\n  title: {\r\n    fontSize: \"42\",\r\n    fontWeight: \"700\",\r\n    margin: \"0 0 15 0\",\r\n    color: \"#007bff\",\r\n  },\r\n};\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div style={styles.bar}>\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            classNames=\"fade\"\r\n            timeout={500}\r\n          >\r\n            <h1 style={styles.title}>Phonebook</h1>\r\n          </CSSTransition>\r\n          <ContactForm />\r\n\r\n          <CSSTransition\r\n            in={true}\r\n            classNames=\"fade\"\r\n            timeout={500}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition\r\n            in={true}\r\n            classNames=\"fade\"\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <Contacts />\r\n          </CSSTransition>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2tzlt\",\"form\":\"ContactForm_form__16-5k\",\"input\":\"ContactForm_input__2sKtE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"Contacts_ContactList__3Qy1o\",\"ContactList_item\":\"Contacts_ContactList_item__31-UK\",\"button\":\"Contacts_button__2DVzJ\",\"enter\":\"Contacts_enter__2Syfd\",\"enterActive\":\"Contacts_enterActive__1pQvL\",\"exit\":\"Contacts_exit__VY6yQ\",\"exitActive\":\"Contacts_exitActive__68LJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1GpKQ\",\"input\":\"Filter_input__3EeDZ\",\"form\":\"Filter_form__1DTAq\"};"],"sourceRoot":""}